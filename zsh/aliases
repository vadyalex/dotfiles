
alias l='ls -lFh | lolcat'     #size,show type,human readable
alias la='ls -lAFh | lolcat'   #long list,show almost all,show type,human readable
alias lt='ls -ltFh | lolcat'   #long list,sorted by date,show type,human readable
alias ll='ls -lh | lolcat'
alias lth='lt | head | lolcat'

alias gofinddir='find . -type d -name'
alias gofindfile='find . -type f -name'

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias rngr=ranger
alias finder=ranger

alias clr=clear

alias gohome=cd

alias gop="cd $HOME/Projects"

alias gobudbee="cd $HOME/Projects/__budbee"
alias gobud=gobudbee

alias god="cd $HOME/Downloads"

alias ihaskell="stack ghci"

vscode () {
	flatpak run com.visualstudio.code $*
}

go-git-pull-all-sub-directories () {
	find $PWD -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | xargs -I {directory} sh -c \
	"if [ -d {directory}/.git ]; then \
		printf '\033[33mProcessing {directory}..\n\033[0m' && \
		git -C {directory} fetch --all && \
		git -C {directory} pull --all --rebase --autostash; \
	fi"
}

untar () {
	tar xfv $*
}

random-string() {
	cat /dev/urandom | tr -dc 'a-z0-9' | head -c ${1:-33}
}


###############################################################################
#
#		Containerized utilities
#
###############################################################################

dkr () {
	if ! type "$podman" > /dev/null; then
		podman $*
	else
		if ! type "$docker" > /dev/null; then
			docker $*
		else
			echo 'Neither podman nor docker installed in the system!'
		fi 
	fi
}


alias tor-browser="dkr run -i -t --rm \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-v /dev/shm:/dev/shm \
		-e DISPLAY=unix$DISPLAY \
		jess/tor-browser"


# AWS CLI
alias aws='dkr run $(tty &>/dev/null && echo "-i") -t --rm -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" -e "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" -v "$(pwd):/project" --user "$(id -u):$(id -g)" mesosphere/aws-cli'


# MongoDB utils: mongo, mongodump, mongorestore, mongoimport, mongoexport
MONGODB_VERSION=3.6

mongo () {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mongo:$MONGODB_VERSION \
		sh -c "exec mongo $*"
}

mongodump() {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mongo:$MONGODB_VERSION \
		sh -c "exec mongodump $*"
}

mongorestore() {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mongo:$MONGODB_VERSION \
		sh -c "exec mongorestore $*"
}

mongoimport() {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mongo:$MONGODB_VERSION \
		sh -c "exec mongoimport $*"
}

mongoexport() {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mongo:$MONGODB_VERSION \
		sh -c "exec mongoexport $*"
}


# MySQL utils:
MYSQL_VERSION=5.7

mysql2 () {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mysql:$MYSQL_VERSION \
		sh -c "exec mysql $*"
}

mysqldump2 () {
	dkr run $(tty &>/dev/null && echo "-i") -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		mysql:$MYSQL_VERSION \
		sh -c "exec mysqldump $*"
}


# alias for Maven 3 executable in the container..
MAVEN_VERSION=3

#mvn () {
#	dkr run -i -t --rm \
#		--net=host \
#		--user $(id -u):$(id -g) \
#		-v "$HOME"/.m2:/root/.m2 \
#		-v "$HOME"/.gitconfig:/root/.gitconfig:ro \
#		-v "$HOME"/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
#		-v "$HOME"/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro \
#		-v $(pwd):/app \
#		-w /app \
#		maven:$MAVEN_VERSION \
#		sh -c "exec mvn $*"
#}


# YARN
NODE_VERSION=12

yarn () {
	dkr run -i -t --rm \
		--net=host \
		--user $(id -u):$(id -g) \
		-v $(pwd):/app \
		-w /app \
		node:"$NODE_VERSION" \
		sh -c "exec yarn $*"
}


# alias for Leiningen 2.8.1 executable in the container..
#lein () {
#	dkr run -i -t --rm \
#		--net=host \
#		--user $(id -u):$(id -g) \
#		-p 7888:7888 \
#		-v "$HOME"/.lein:/root/.lein \
#		-v "$HOME"/.m2:/root/.m2 \
#		-v "$HOME"/.gitconfig:/root/.gitconfig:ro \
#		-v "$HOME"/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
#		-v "$HOME"/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro \
#		-v $(pwd):/app \
#		-w /app \
#		clojure:lein-2.8.1 \
#		sh -c "exec lein $*"
#}

# alias for Clojure Boot 2.7.2 executable in the container..
#boot () {
#	dkr run -i -t --rm \
#		--net=host \
#		--user $(id -u):$(id -g) \
#		-p 7888:7888 \
#		-v "$HOME"/.lein:/root/.lein \
#		-v "$HOME"/.m2:/root/.m2 \
#		-v "$HOME"/.gitconfig:/root/.gitconfig:ro \
#		-v "$HOME"/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
#		-v "$HOME"/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro \
#		-v $(pwd):/app \
#		-w /app \
#		clojure:boot-2.7.2 \
#		sh -c "exec boot $*"
#}

alias iclojure="lein repl :headless :host 0.0.0.0 :port 7888"
alias repl="lein repl"

export BOOT_JVM_OPTIONS="-Xmx4g -client -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xverify:none -XX:MaxMetaspaceSize=128m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"

###############################################################################